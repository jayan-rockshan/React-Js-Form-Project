{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","testdelete","index","e","mylist","Object","assign","state","splice","setState","title","description","selectbar","event","this","target","value","alert","blogPosts","push","preventDefault","className","onSubmit","testsubmit","onChange","testtitle","placeholder","testdescription","testselectbar","type","onClick","testclear","map","item","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6CRC,WAAa,SAACC,EAAOC,GACnB,IAAMC,EAASC,OAAOC,OAAO,GAAI,EAAKC,MAAMH,QAC5CA,EAAOI,OAAON,EAAO,GACrB,EAAKO,SAAS,CAAEL,OAAQA,KA/CxB,EAAKG,MAAQ,CACXG,MAAO,GACPC,YAAa,GACbC,UAAW,GACXR,OAAQ,IANO,E,6CAUnB,SAAUS,GACRC,KAAKL,SAAS,CAAEC,MAAOG,EAAME,OAAOC,U,6BAEtC,SAAgBH,GACdC,KAAKL,SAAS,CAAEE,YAAaE,EAAME,OAAOC,U,2BAE5C,SAAcH,GACZC,KAAKL,SAAS,CAAEG,UAAWC,EAAME,OAAOC,U,wBAY1C,SAAWH,GACT,GAAyB,KAArBC,KAAKP,MAAMG,OAA2C,KAA3BI,KAAKP,MAAMI,YACxCM,MAAM,4BACD,CACL,IAAIC,EAAYJ,KAAKP,MAAMH,OAC3Bc,EAAUC,KAAK,CACbT,MAAOI,KAAKP,MAAMG,MAClBE,UAAWE,KAAKP,MAAMK,UACtBD,YAAaG,KAAKP,MAAMI,cAE1BG,KAAKL,SAAS,CAAEL,OAAQc,IACxBL,EAAMO,oB,uBAGV,SAAUP,GACRC,KAAKL,SAAS,CAAEC,MAAO,GAAIC,YAAa,O,oBAO1C,WAAU,IAAD,OACP,OACE,sBAAKU,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,SACE,4CAEF,sBAAKA,UAAU,SAAf,UACA,uBAAMC,SAAU,SAACnB,GAAD,OAAO,EAAKoB,WAAWpB,IAAvC,UACE,uBACEkB,UAAU,QACVL,MAAOF,KAAKP,MAAMG,MAClBc,SAAU,SAACrB,GAAD,OAAO,EAAKsB,UAAUtB,IAChCuB,YAAY,UAEd,uBACA,0BACEL,UAAU,QACVL,MAAOF,KAAKP,MAAMI,YAClBa,SAAU,SAACrB,GAAD,OAAO,EAAKwB,gBAAgBxB,IACtCuB,YAAY,gBAEd,uBACA,yBACEL,UAAU,QACVL,MAAOF,KAAKP,MAAMK,UAClBY,SAAU,SAACrB,GAAD,OAAO,EAAKyB,cAAczB,IAHtC,UAKE,wBAAQa,MAAM,MAAd,mBACA,wBAAQA,MAAM,SAAd,sBACA,wBAAQA,MAAM,OAAd,uBAEF,uBACA,uBAAOK,UAAU,cAAcQ,KAAK,SAASb,MAAM,YAErD,wBAAQK,UAAU,cAAcS,QAAS,SAAC3B,GAAD,OAAO,EAAK4B,UAAU5B,IAA/D,mBAGA,qBAAKkB,UAAU,YAAf,SACE,oDAGDP,KAAKP,MAAMH,OAAO4B,KAAI,SAACC,GACtB,OACE,qBAAIZ,UAAU,WAAd,UACGY,EAAKvB,MACN,qBAAKW,UAAU,cAAf,SAA8BY,EAAKtB,cACnC,uBACA,wBACEU,UAAU,aACVS,QAAS,EAAK7B,WAAWiC,KAAK,EAAKhC,OAFrC,oC,GAnGmBiC,IAAMC,WCSxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ddf6d11.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Style.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      selectbar: \"\",\n      mylist: []\n    };\n  }\n\n  testtitle(event) {\n    this.setState({ title: event.target.value });\n  }\n  testdescription(event) {\n    this.setState({ description: event.target.value });\n  }\n  testselectbar(event) {\n    this.setState({ selectbar: event.target.value });\n  }\n\n  /*testedithard(event){\n   let test = setState({title:\"\" }) || setState({description:\"\" });\n    if(test){\n      alert(\"You missed something\")\n    }else{\n      testsubmit();\n    }\n }*/\n\n  testsubmit(event) {\n    if (this.state.title === \"\" || this.state.description === \"\") {\n      alert(\"You missed something\");\n    } else {\n      let blogPosts = this.state.mylist;\n      blogPosts.push({\n        title: this.state.title,\n        selectbar: this.state.selectbar,\n        description: this.state.description\n      });\n      this.setState({ mylist: blogPosts });\n      event.preventDefault();\n    }\n  }\n  testclear(event) {\n    this.setState({ title: \"\", description: \"\" });\n  }\n  testdelete = (index, e) => {\n    const mylist = Object.assign([], this.state.mylist);\n    mylist.splice(index, 1);\n    this.setState({ mylist: mylist });\n  };\n  render() {\n    return (\n      <div className=\"test1\">\n        <div className=\"test2\">\n          <h1>Todo App</h1>\n        </div>\n        <div className='entire'>\n        <form onSubmit={(e) => this.testsubmit(e)}>\n          <input\n            className=\"test3\"\n            value={this.state.title}\n            onChange={(e) => this.testtitle(e)}\n            placeholder=\"Title\"\n          ></input>\n          <br />\n          <textarea\n            className=\"test4\"\n            value={this.state.description}\n            onChange={(e) => this.testdescription(e)}\n            placeholder=\"Description\"\n          ></textarea>\n          <br />\n          <select\n            className=\"test5\"\n            value={this.state.selectbar}\n            onChange={(e) => this.testselectbar(e)}\n          >\n            <option value=\"Low\"> Low </option>\n            <option value=\"Medium\"> Medium </option>\n            <option value=\"High\"> High </option>\n          </select>\n          <br />\n          <input className=\"testbutton1\" type=\"submit\" value=\"Save\"></input>\n        </form>\n        <button className=\"testbutton2\" onClick={(e) => this.testclear(e)}>\n          clear\n        </button>\n        <div className=\"listtest1\">\n          <h3>Todo list itemes</h3>\n        </div>\n\n        {this.state.mylist.map((item) => {\n          return (\n            <li className=\"testlist\">\n              {item.title}\n              <div className=\"testlistdes\">{item.description}</div>\n              <br />\n              <button\n                className=\"listButton\"\n                onClick={this.testdelete.bind(this.index)}\n              >\n                delete\n              </button>\n            </li>\n          );\n        })}\n      </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}